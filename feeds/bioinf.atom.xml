<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tech Notes</title><link href="http://xiaojianfeng.github.io/" rel="alternate"></link><link href="http://xiaojianfeng.github.io/feeds/bioinf.atom.xml" rel="self"></link><id>http://xiaojianfeng.github.io/</id><updated>2015-03-14T16:03:00+08:00</updated><entry><title>common mistakes in bioinformatics</title><link href="http://xiaojianfeng.github.io/bioinf/common-mistakes-in-bioinformatics.html" rel="alternate"></link><updated>2015-03-14T16:03:00+08:00</updated><author><name>Xiao Jianfeng</name></author><id>tag:xiaojianfeng.github.io,2015-03-14:bioinf/common-mistakes-in-bioinformatics.html</id><summary type="html">&lt;p&gt;This nice thread(https://www.biostars.org/p/7126/) summarized a lot of common mistakes people (including me, of course) might make in daily work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;forget&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;check&lt;/span&gt; &lt;span class="nt"&gt;both&lt;/span&gt; &lt;span class="nt"&gt;strands&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;generate&lt;/span&gt; &lt;span class="nt"&gt;random&lt;/span&gt; &lt;span class="nt"&gt;genomic&lt;/span&gt; &lt;span class="nt"&gt;sites&lt;/span&gt; &lt;span class="nt"&gt;without&lt;/span&gt; &lt;span class="nt"&gt;avoiding&lt;/span&gt; &lt;span class="nt"&gt;masked&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;NNN&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;gaps&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;confuse&lt;/span&gt; &lt;span class="nt"&gt;genome&lt;/span&gt; &lt;span class="nt"&gt;freezes&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;even&lt;/span&gt; &lt;span class="nt"&gt;species&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;lot&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;off-by-one&lt;/span&gt; &lt;span class="nt"&gt;errors&lt;/span&gt; &lt;span class="nt"&gt;due&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;switching&lt;/span&gt; &lt;span class="nt"&gt;between&lt;/span&gt; &lt;span class="nt"&gt;formats&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Bed&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;based&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  &lt;span class="nt"&gt;GFF&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;GTF&lt;/span&gt; &lt;span class="nt"&gt;are&lt;/span&gt; &lt;span class="nt"&gt;1-based&lt;/span&gt;  
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;Trusting&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;downloaded&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;actually&lt;/span&gt; &lt;span class="nt"&gt;fully&lt;/span&gt; &lt;span class="nt"&gt;downloaded&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;Trusting&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;an&lt;/span&gt; &lt;span class="nt"&gt;aligner&lt;/span&gt; &lt;span class="nt"&gt;will&lt;/span&gt; &lt;span class="nt"&gt;accept&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;list&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;query&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt; &lt;span class="nt"&gt;instead&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;just&lt;/span&gt; &lt;span class="nt"&gt;taking&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;first&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;ignoring&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;rest&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;quiz&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;which&lt;/span&gt; &lt;span class="nt"&gt;ones&lt;/span&gt; &lt;span class="nt"&gt;am&lt;/span&gt; &lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="nt"&gt;talking&lt;/span&gt; &lt;span class="nt"&gt;about&lt;/span&gt;&lt;span class="o"&gt;?)&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;Assuming&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;quality&lt;/span&gt; &lt;span class="nt"&gt;scores&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;FASTQ&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="nt"&gt;are&lt;/span&gt; &lt;span class="nt"&gt;from&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;great&lt;/span&gt; &lt;span class="nt"&gt;Sanger-encoded&lt;/span&gt; &lt;span class="nt"&gt;run&lt;/span&gt; &lt;span class="nt"&gt;instead&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;very&lt;/span&gt; &lt;span class="nt"&gt;poor&lt;/span&gt; &lt;span class="nt"&gt;Illumina-1&lt;/span&gt;&lt;span class="nc"&gt;.3&lt;/span&gt; &lt;span class="nt"&gt;run&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;Assuming&lt;/span&gt; &lt;span class="nt"&gt;chr1&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;followed&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;chr2&lt;/span&gt; &lt;span class="nt"&gt;not&lt;/span&gt; &lt;span class="nt"&gt;chr10&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;off-by-one&lt;/span&gt; &lt;span class="nt"&gt;errors&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;regex&lt;/span&gt; &lt;span class="nt"&gt;errors&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;parsing&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;complex&lt;/span&gt; &lt;span class="nt"&gt;alignment&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="nt"&gt;format&lt;/span&gt; &lt;span class="nt"&gt;incorrectly&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;e&lt;/span&gt;&lt;span class="nc"&gt;.g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;BLAST&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;GenBank&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;probably&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;original&lt;/span&gt; &lt;span class="nt"&gt;rationale&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;developing&lt;/span&gt; &lt;span class="nt"&gt;BioPerl&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;failing&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;account&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;strand&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;failing&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;revcomp&lt;/span&gt; &lt;span class="nt"&gt;sequences&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;failing&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;account&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;last&lt;/span&gt; &lt;span class="nt"&gt;element&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;because&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;improper&lt;/span&gt; &lt;span class="nt"&gt;loop&lt;/span&gt; &lt;span class="nt"&gt;condition&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;no&lt;/span&gt; &lt;span class="nt"&gt;EOL&lt;/span&gt; &lt;span class="nt"&gt;character&lt;/span&gt; &lt;span class="nt"&gt;on&lt;/span&gt; &lt;span class="nt"&gt;last&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;failing&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;account&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;OS&lt;/span&gt; &lt;span class="nt"&gt;dependent&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt; &lt;span class="nt"&gt;breaks&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;using&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;wrong&lt;/span&gt; &lt;span class="nt"&gt;assembly&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;annotation&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;release&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;using&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;wrong&lt;/span&gt; &lt;span class="nt"&gt;genome&lt;/span&gt; &lt;span class="nt"&gt;coordinate&lt;/span&gt; &lt;span class="nt"&gt;system&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;using&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;wrong&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;multiple&lt;/span&gt; &lt;span class="nt"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt; &lt;span class="nt"&gt;skew&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;failing&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;account&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;nested&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;intercalated&lt;/span&gt; &lt;span class="nt"&gt;annotation&lt;/span&gt; &lt;span class="nt"&gt;features&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;e&lt;/span&gt;&lt;span class="nc"&gt;.g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;genes&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;assuming&lt;/span&gt; &lt;span class="nt"&gt;all&lt;/span&gt; &lt;span class="nt"&gt;jobs&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="nt"&gt;completed&lt;/span&gt; &lt;span class="nt"&gt;on&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;cluster&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;deleting&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;not&lt;/span&gt; &lt;span class="nt"&gt;randomizing&lt;/span&gt; &lt;span class="nt"&gt;your&lt;/span&gt; &lt;span class="nt"&gt;data&lt;/span&gt; &lt;span class="nt"&gt;properly&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;improper&lt;/span&gt; &lt;span class="nt"&gt;use&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;statistical&lt;/span&gt; &lt;span class="nt"&gt;tests&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;not&lt;/span&gt; &lt;span class="nt"&gt;documenting&lt;/span&gt; &lt;span class="nt"&gt;methods&lt;/span&gt; &lt;span class="nt"&gt;fully&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;check&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;correct&lt;/span&gt; &lt;span class="nt"&gt;all&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;above&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nt"&gt;Run&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;batch&lt;/span&gt; &lt;span class="nt"&gt;BLAST&lt;/span&gt; &lt;span class="nt"&gt;job&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;forgetting&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;put&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-o something.out&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;Then&lt;/span&gt; &lt;span class="nt"&gt;switching&lt;/span&gt; &lt;span class="nt"&gt;off&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;monitor&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;coming&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;next&lt;/span&gt; &lt;span class="nt"&gt;day&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;see&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;bunch&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;characters&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;my&lt;/span&gt; &lt;span class="nt"&gt;terminal&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tar -zxvf&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;without&lt;/span&gt; &lt;span class="nt"&gt;checking&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;file&lt;/span&gt; &lt;span class="nt"&gt;before&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;I&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="nt"&gt;decompressed&lt;/span&gt; &lt;span class="nt"&gt;thousands&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;my&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;directory&lt;/span&gt; &lt;span class="nt"&gt;assuming&lt;/span&gt; &lt;span class="nt"&gt;they&lt;/span&gt; &lt;span class="nt"&gt;came&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;their&lt;/span&gt; &lt;span class="nt"&gt;own&lt;/span&gt; &lt;span class="nt"&gt;folder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another very important one is: gene name might be hacked by MS Excel. &lt;/p&gt;
&lt;p&gt;There are 11 human gene names in March: MARCH1 to MARCH11, and one in December: DEC1. And excel will treat them as date!&lt;/p&gt;
&lt;p&gt;So make sure to ask excel to open data as text when working with gene names.&lt;/p&gt;
&lt;p&gt;Please refer to this paper for more info.&lt;/p&gt;
&lt;p&gt;1.Zeeberg, B. R. et al. Mistaken Identifiers: Gene name errors can be introduced inadvertently when using Excel in bioinformatics. BMC Bioinformatics 5, 80 (2004).  http://www.biomedcentral.com/1471-2105/5/80&lt;/p&gt;</summary></entry><entry><title>convert bam file to fastq</title><link href="http://xiaojianfeng.github.io/bioinf/convert-bam-file-to-fastq.html" rel="alternate"></link><updated>2014-08-06T20:16:55+08:00</updated><author><name>Xiao Jianfeng</name></author><id>tag:xiaojianfeng.github.io,2014-08-06:bioinf/convert-bam-file-to-fastq.html</id><summary type="html">&lt;p&gt;After having struggled for a while to find a convenient tool to extract .fastq file to .bam file, I decided to write one.&lt;/p&gt;
&lt;p&gt;The problems with current tools are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Couldn't deal with reads having multiple match in .bam file.&lt;/li&gt;
&lt;li&gt;Some tools require the .bam to be sorted by name first.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my program (https://github.com/XiaoJianfeng/ibl/blob/master/util/bam2fq.sh), Sqlite3 is used to do the heavy job. Below is the details of how to do it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;"samtools view" read .bam file and output to stdout.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sqlite3 create a table fastq with 4 columns (qname, flag, seq, qual), and import data from stdout to the table with sqlite3 command ".import".
CREATE TABLE fastq (qname, flag, seq, qual);&lt;/p&gt;
&lt;p&gt;select date()||" "||time()||" import begin";&lt;br /&gt;
.separator "\t"&lt;br /&gt;
.import temp.$$ fastq 
CREATE INDEX qname_idx on fastq (qname);   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sqlite3 creat two tables, "left" and "right", and get qname of read_1 and read_2 to these two tables separately. whether a read is the first read or second read is identified by checking the flag. 0x40 is set for first read, while 0x80 is set for second read.&lt;/p&gt;
&lt;p&gt;CREATE TABLE left as select qname from fastq where flag &amp;amp; 64 == 64;&lt;br /&gt;
CREATE TABLE right as select qname from fastq where flag &amp;amp; 128 == 128;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;select reads from table "fastq" that are the first in the pair, and has corresponding mate pair in table "right"; and select reads from table "fastq" that are the second in the pair, and has corresponding mate pair in table "left". "\n" is used as separator between columns, and the output is redirected to .fastq file.&lt;/p&gt;
&lt;p&gt;.output ${left_file}&lt;br /&gt;
.separator "\n"&lt;br /&gt;
select distinct "@"||right.qname||"/1", seq, '+', qual from right join fastq on fastq.qname == right.qname where flag&amp;amp;64 == 64 order by right.qname;  &lt;/p&gt;
&lt;p&gt;.output ${right_file}&lt;br /&gt;
.separator "\n"&lt;br /&gt;
select distinct "@"||left.qname||"/2", seq, '+', qual from left join fastq on fastq.qname == left.qname where flag&amp;amp;128 == 128 order by left.qname;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;job done.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With my program, the .bam file doesn't need to be sorted beforehand.&lt;/p&gt;
&lt;p&gt;It has one limition: the output .fastq files are not compressed. I will remove this limition later when I have time. But please rest assured it works perfectly well at the moment.&lt;/p&gt;
&lt;h2&gt;[update 2014-08-11 22:33:09]:&lt;/h2&gt;
&lt;h3&gt;fixed a bug regarding identification of first and second read in a pair by flags&lt;/h3&gt;
&lt;p&gt;the primary alignment should have flag &amp;amp; 0x900 == 0, first read has flag &amp;amp; 0x40 == 0x40, and second read has flag &amp;amp; 0x80 == 0x80&lt;/p&gt;
&lt;p&gt;so primary alignment of first read should be flag &amp;amp; 0x940 (ie. 2368) == 0x40, and for second read flag &amp;amp; 0x980 (ie. 2432) == 0x80&lt;/p&gt;
&lt;p&gt;CREATE TABLE left as select qname from fastq where flag &amp;amp; 2368 == 64; &lt;br /&gt;
   CREATE TABLE right as select qname from fastq where flag &amp;amp; 2432 == 128;       &lt;/p&gt;
&lt;h3&gt;bam2fq.sh is updated to support gziped output.&lt;/h3&gt;
&lt;p&gt;details of the implementation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;first creat named pipe&lt;/p&gt;
&lt;p&gt;mkfifo tmp_output&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;use gzip to compress the content read from named pipe, and put the process into background&lt;/p&gt;
&lt;p&gt;gzip -c &amp;lt; tmp_output &amp;gt; output.fq.gz &amp;amp;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in sqlite3, output to to named pipe&lt;/p&gt;
&lt;p&gt;.output tmp_output
[SELECT ...]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it is possible to set .output to a pipe from within sqlite3,&lt;/p&gt;
&lt;p&gt;.output '| gzip -c &amp;gt; output.fq.gz'
[SELECT ...]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;[2014-08-12 21:14:52]&lt;/h2&gt;
&lt;h3&gt;the task is more complicated than I have expected. here is another bug&lt;/h3&gt;
&lt;p&gt;The sequences in .bam file for two reads of a pair are on the same strand. However, for 
paired-end reads, one read is on forward stand, and the other one is on reverse strand.
So one of them should be mapped to another strand (reverse complement).&lt;/p&gt;
&lt;p&gt;In bam2fq.sh, the first reads are extracted from .bam unchanged. The second reads are all converted to reverse complement with command "tr 'ATGC' 'TACG' | rev".&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/XiaoJianfeng/ibl/blob/master/util/bam2fq.sh"&gt;bam2fq.sh&lt;/a&gt; is updated.&lt;/p&gt;</summary></entry></feed>