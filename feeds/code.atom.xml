<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tech Notes</title><link href="http://xiaojianfeng.github.io/" rel="alternate"></link><link href="http://xiaojianfeng.github.io/feeds/code.atom.xml" rel="self"></link><id>http://xiaojianfeng.github.io/</id><updated>2015-04-05T17:00:00+08:00</updated><entry><title>how to re-attach a lftp process</title><link href="http://xiaojianfeng.github.io/code/how-to-re-attach-a-lftp-process.html" rel="alternate"></link><updated>2015-04-05T17:00:00+08:00</updated><author><name>Xiao Jianfeng</name></author><id>tag:xiaojianfeng.github.io,2015-04-05:code/how-to-re-attach-a-lftp-process.html</id><summary type="html">&lt;p&gt;lftp很好的一个功能是退出之后，正在运行的任务会自动提交到后台继续运行。&lt;/p&gt;
&lt;p&gt;但是有时候想重新连接这些任务，lftp提供了一个很好的命令attach。首先用ps查到要连接的任务的pid;
然后打开lftp，运行“attach The_PID”。搞定。&lt;/p&gt;</summary></entry><entry><title>run job with at on Mac</title><link href="http://xiaojianfeng.github.io/code/run-job-with-at-on-mac.html" rel="alternate"></link><updated>2015-04-01T11:16:00+08:00</updated><author><name>Xiao Jianfeng</name></author><id>tag:xiaojianfeng.github.io,2015-04-01:code/run-job-with-at-on-mac.html</id><summary type="html">&lt;p&gt;"at" on Mac is run by atrun, which is invoked by launchd. The problem is atrun is not running by default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;atrun&lt;/span&gt; &lt;span class="n"&gt;utility&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt; &lt;span class="n"&gt;queued&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;  &lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;invoked&lt;/span&gt; &lt;span class="n"&gt;periodically&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;launchd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;specified&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atrun&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plist&lt;/span&gt; &lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;By&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;property&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;contains&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Disabled&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;atrun&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;never&lt;/span&gt; &lt;span class="n"&gt;invoked&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;Execute&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="n"&gt;atrun&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  
    &lt;span class="n"&gt;launchctl&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;LaunchDaemons&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atrun&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plist&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that, you can use "at" to submit job on Mac.&lt;/p&gt;</summary></entry><entry><title>install docker on Mac OS X 10.10</title><link href="http://xiaojianfeng.github.io/code/install-docker-on-mac-os-x-1010.html" rel="alternate"></link><updated>2015-03-25T13:46:00+08:00</updated><author><name>Xiao Jianfeng</name></author><id>tag:xiaojianfeng.github.io,2015-03-25:code/install-docker-on-mac-os-x-1010.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;install boot2docker &lt;/p&gt;
&lt;p&gt;Go to https://github.com/boot2docker/osx-installer/releases, and download boot2docker v1.5.0.&lt;/p&gt;
&lt;p&gt;The docker and boot2docker binaries are in /usr/local/bin which you can access from your terminal. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;launch boot2docker.app, which will open a terminal window. And run "docker run hello-world" to check if the installation succeeds or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can upgrade your existing Boot2Docker VM without data loss by running:  boot2docker upgrade&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a new Boot2Docker VM.&lt;/p&gt;
&lt;p&gt;boot2docker init&lt;/p&gt;
&lt;p&gt;This will create a new virtual machine on "~/VirtualBox VMs/boot2docker-vm". You only need to run this command once.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;start boot2docker VM.&lt;/p&gt;
&lt;p&gt;boot2docker start&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;display the environment variables for docker&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;boot2docker shellinit
Writing /Users/username/.boot2docker/certs/boot2docker-vm/ca.pem  &lt;br /&gt;
Writing /Users/username/.boot2docker/certs/boot2docker-vm/cert.pem  &lt;br /&gt;
Writing /Users/username/.boot2docker/certs/boot2docker-vm/key.pem  &lt;br /&gt;
    export DOCKER_CERT_PATH=/Users/username/.boot2docker/certs/boot2docker-vm  &lt;br /&gt;
    export DOCKER_TLS_VERIFY=1  &lt;br /&gt;
    export DOCKER_HOST=tcp://192.168.59.103:2376    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if "env | grep docker" doesn't show 3 settings, you should set variables for docker.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$(boot2docker shellinit)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;start to work with docker.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;close the boot2docker image.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;boot2docker stop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary></entry><entry><title>create shortcurt key for ksnapshot</title><link href="http://xiaojianfeng.github.io/code/create-shortcurt-key-for-ksnapshot.html" rel="alternate"></link><updated>2014-08-14T23:27:51+08:00</updated><author><name>Xiao Jianfeng</name></author><id>tag:xiaojianfeng.github.io,2014-08-14:code/create-shortcurt-key-for-ksnapshot.html</id><summary type="html">&lt;p&gt;ksnapshot is a powerful tool to take snapshot. However, each time you have to start ksnapshot from the application menu, which is not as efficient as it should be.&lt;/p&gt;
&lt;p&gt;Here is how to create shortcut key for ksnapshot.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;go to "System Settings" --&amp;gt; "Shortcuts and Gestures" --&amp;gt; "Custom Shortcuts"
   --&amp;gt; "Preset Actions" --&amp;gt; "PrintScreen"&lt;/p&gt;
&lt;p&gt;set "Meta + S" (Win + S), which is the same as screen clipping shortcut for onenote on Windows, for Trigger;
   &lt;img alt="set shotcut key" src="/images/ksnapshot1.png" /&gt;&lt;/p&gt;
&lt;p&gt;and set "ksnapshot --region" as "Command/URL" for Action. Here I prefer the default behavior to take screenshot of rectangel area. You can just use "ksnapshot" if you like.
   &lt;img alt="set command" src="/images/ksnapshot2.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all. Now you can just press "Win + S" and select a rectangle region to take a screenshot.&lt;/p&gt;</summary></entry><entry><title>install Chinese input method on T61 running Debian</title><link href="http://xiaojianfeng.github.io/code/install-chinese-input-method-on-t61-running-debian.html" rel="alternate"></link><updated>2014-08-13T22:39:27+08:00</updated><author><name>Xiao Jianfeng</name></author><id>tag:xiaojianfeng.github.io,2014-08-13:code/install-chinese-input-method-on-t61-running-debian.html</id><summary type="html">&lt;p&gt;Now it is much eaiser to install Chinese input method than before.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;apt-get install task-chinese-s-kde-desktop fcitx-pinyin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to "Settings" --&amp;gt; "System Settings" --&amp;gt; "Local" --&amp;gt; "Input Method" --&amp;gt; "Input Method"
   --&amp;gt; add "Pinyin" from "Available Input Method" to "Current Input Method". &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Uncheck "Only Show Current Language" if "Pinyin" is not shown in "Available Input Method".&lt;/p&gt;
&lt;p&gt;That's all. You will be able to use "Ctrl + Space" to use Chinese input method.&lt;/p&gt;</summary></entry><entry><title>create blog on github pages with pelican</title><link href="http://xiaojianfeng.github.io/code/create-blog-on-github-pages-with-pelican.html" rel="alternate"></link><updated>2015-02-23T22:39:54+08:00</updated><author><name>Xiao Jianfeng</name></author><id>tag:xiaojianfeng.github.io,2014-08-05:code/create-blog-on-github-pages-with-pelican.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;install pelican, ghp-import, and of course git&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;create a github repo: xiaojianfeng.github.io, and choose to not initalize with a README.md.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;create a directory "technotes", cd into this directory and run "pelican-quickstart"&lt;/p&gt;
&lt;p&gt;$ mkdir technotes &lt;br /&gt;
$ cd technotes &lt;br /&gt;
$ pelican-quickstart &lt;br /&gt;
Welcome to pelican-quickstart v3.5.0.  &lt;/p&gt;
&lt;p&gt;This script will help you create a new Pelican-based website.  &lt;/p&gt;
&lt;p&gt;Please answer the following questions so this script can generate the files&lt;br /&gt;
needed by Pelican.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Where do you want to create your new web site? [.] &lt;br /&gt;
What will be the title of this web site? Tech Notes&lt;br /&gt;
Who will be the author of this web site? Xiao Jianfeng&lt;br /&gt;
What will be the default language of this web site? [en] &lt;br /&gt;
Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)   &lt;br /&gt;
What is your URL prefix? (see above example; no trailing slash) http://xiaojianfeng.github.io&lt;br /&gt;
Do you want to enable article pagination? (Y/n) &lt;br /&gt;
How many articles per page do you want? [10] 20&lt;br /&gt;
Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) &lt;br /&gt;
Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n) &lt;br /&gt;
Do you want to upload your website using FTP? (y/N) &lt;br /&gt;
Do you want to upload your website using SSH? (y/N) &lt;br /&gt;
Do you want to upload your website using Dropbox? (y/N) &lt;br /&gt;
Do you want to upload your website using S3? (y/N) &lt;br /&gt;
Do you want to upload your website using Rackspace Cloud Files? (y/N) &lt;br /&gt;
Do you want to upload your website using GitHub Pages? (y/N) y&lt;br /&gt;
Is this your personal page (username.github.io)? (y/N) y&lt;br /&gt;
Done. Your new project is available at /path/to/technotes  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;initalize git repo in directory on local harddisk&lt;/p&gt;
&lt;p&gt;$ cd technotes&lt;br /&gt;
$ git init&lt;br /&gt;
$ git remote add origin https://github.com:XiaoJianfeng/xiaojianfeng.github.io.git     &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;start to write blog with markdown, and then run "make github"&lt;/p&gt;
&lt;p&gt;$ vim content/first_post.md  # and write something &lt;br /&gt;
$ make github   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add the following to ~/.gitconfig, so you will not to be asked to input password everytime, and you can use multiple accounts with multiple repositories.&lt;/p&gt;
&lt;p&gt;[credential]&lt;br /&gt;
    helper = osxkeychain&lt;br /&gt;
    useHttpPath = true  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary></entry></feed>